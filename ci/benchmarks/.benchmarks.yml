.use_base_container: &use_base_container
  stage: benchmarks
  image: "${CI_REGISTRY_IMAGE}:latest"
  services:
    - name: docker:dind
      alias: docker

.run_benchmarks: &run_benchmarks
  <<: *use_base_container
  script:
    - pip3 install -e .
    - pip install litellm langchain transformers torch openai tqdm
    - for var in $(compgen -e); do
        if [[ $var == CTF_* && -n ${!var} ]]; then
          export $var="${!var}"
        fi
      done

  artifacts:
    paths:
      - cai/benchmarks/seceval/eval/outputs/
      - cai/benchmarks/cybermetric/outputs/
    expire_in: 12 month
  tags:
    - p40
    - x86
  rules:
    - if: $CI_COMMIT_BRANCH
      when: on_success

benchmarks-test-seceval:
  <<: *run_benchmarks
  variables:
    OLLAMA_API_BASE: "http://localhost:8000"
    OPENROUTER_API_BASE: "https://openrouter.ai/api/v1"
  script:
    - pip3 install -e .
    - pip install -r benchmarks/seceval/eval/requirements.txt
    - python3 benchmarks/seceval/eval/eval.py --dataset_file benchmarks/seceval/eval/datasets/questions-2.json --output_dir benchmarks/seceval/eval/outputs --backend ollama --models ollama/qwen2.5:14b

benchmarks-test-cybermetric:
  <<: *run_benchmarks
  variables:    
    OLLAMA_API_BASE: "http://localhost:8000"
    OPENROUTER_API_BASE: "https://openrouter.ai/api/v1"
    OPENROUTER_API_KEY: ${OPENROUTER_API_KEY}
    
  script:
    - pip3 install -e .
    - pip install python-dotenv
    - echo "All environment variables:"
    - env | sort
    - echo "Checking if OPENROUTER_API_KEY is set..."
    - if [ -z "$OPENROUTER_API_KEY" ]; then echo "OPENROUTER_API_KEY is not set!"; else echo "OPENROUTER_API_KEY is set (value is masked)"; fi
    - echo "Creating .env file with API key"
    - echo "OPENROUTER_API_KEY=${OPENROUTER_API_KEY}" > .env
    - echo "Created .env file, running benchmark..."
    # Try using the direct command line approach
    - python3 benchmarks/cybermetric/CyberMetric_evaluator.py --model_name openrouter/qwen/qwen3-32b:free --file_path benchmarks/cybermetric/CyberMetric-2-v1.json --api_key ${OPENROUTER_API_KEY}
